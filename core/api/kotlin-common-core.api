public abstract interface class com/huanshankeji/BidirectionalConversion {
	public abstract fun from (Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun to (Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface annotation class com/huanshankeji/InternalApi : java/lang/annotation/Annotation {
}

public final class com/huanshankeji/LambdasKt {
	public static final fun emptyLambda ()Lkotlin/jvm/functions/Function0;
	public static final fun lambdaOf (Lkotlin/jvm/functions/Function0;)Lkotlin/jvm/functions/Function0;
	public static final fun lambdaOf (Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function1;
}

public abstract interface annotation class com/huanshankeji/Untested : java/lang/annotation/Annotation {
}

public final class com/huanshankeji/codec/BasicCodecsKt {
	public static final fun base64ToBytes (Ljava/lang/String;)[B
	public static final fun bigEndianToLong (Ljava/util/List;)J
	public static final fun bigEndianToLong ([B)J
	public static final fun bigEndianToULong (Ljava/util/List;)J
	public static final fun bigEndianToULong-GBYM_sE ([B)J
	public static final fun toBase64String ([B)Ljava/lang/String;
	public static final fun toBigEndianBytes (J)[B
	public static final fun toBigEndianUBytes-VKZWuLQ (J)[B
	public static final fun uLongBigEndianShiftOffset (I)I
}

public final class com/huanshankeji/collections/CollectionsKt {
	public static final fun areElementsDistinct (Ljava/util/List;)Z
	public static final fun eachCount (Ljava/util/List;)Ljava/util/Map;
	public static final fun isSorted (Ljava/lang/Iterable;)Z
	public static final fun isSortedBy (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z
	public static final fun isSortedByDescending (Ljava/lang/Iterable;Lkotlin/jvm/functions/Function1;)Z
	public static final fun isSortedDescending (Ljava/lang/Iterable;)Z
	public static final fun isSortedWith (Ljava/lang/Iterable;Ljava/util/Comparator;)Z
	public static final fun singleOrNullIfEmpty (Ljava/lang/Iterable;)Ljava/lang/Object;
}

public final class com/huanshankeji/collections/LexicographicOrderListComparable : java/lang/Comparable {
	public fun compareTo (Lcom/huanshankeji/collections/LexicographicOrderListComparable;)I
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public final fun getList ()Ljava/util/List;
}

public final class com/huanshankeji/collections/LexicographicOrderListComparableKt {
	public static final fun lexicographicOrderComparable (Ljava/util/List;)Lcom/huanshankeji/collections/LexicographicOrderListComparable;
}

public final class com/huanshankeji/kotlin/CallbacksKt {
	public static final fun produceInCallback (Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class com/huanshankeji/kotlin/EnumKt {
	public static final fun enumPlus ([Ljava/lang/Enum;Ljava/lang/Enum;I)Ljava/lang/Enum;
}

public final class com/huanshankeji/kotlin/UseKt {
	public static final fun closeFinally (Ljava/lang/Object;Ljava/lang/Throwable;Lkotlin/jvm/functions/Function1;)V
	public static final fun use (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
}

public final class com/huanshankeji/os/OSKt {
	public static final fun getCurrentOS ()Lcom/huanshankeji/os/Os;
	public static final fun getSystemOsName ()Ljava/lang/String;
	public static final fun isCurrentOsLinux ()Z
	public static final fun isCurrentOsMacos ()Z
	public static final fun isCurrentOsWindows ()Z
	public static final fun isOSLinux ()Z
	public static final fun isOsLinux (Ljava/lang/String;)Z
	public static final fun isOsMacos (Ljava/lang/String;)Z
	public static final fun isOsWindows (Ljava/lang/String;)Z
}

public final class com/huanshankeji/os/Os : java/lang/Enum {
	public static final field Linux Lcom/huanshankeji/os/Os;
	public static final field Macos Lcom/huanshankeji/os/Os;
	public static final field Windows Lcom/huanshankeji/os/Os;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lcom/huanshankeji/os/Os;
	public static fun values ()[Lcom/huanshankeji/os/Os;
}

public final class com/huanshankeji/random/RandomKt {
	public static final fun nextByte (Lkotlin/random/Random;)B
	public static final fun nextShort (Lkotlin/random/Random;)S
	public static final fun nextUByte (Lkotlin/random/Random;)B
	public static final fun nextUShort (Lkotlin/random/Random;)I
}

public final class com/huanshankeji/security/HashFunctionsKt {
	public static final fun sha256 ()Ljava/security/MessageDigest;
	public static final fun sha256Hash ([B)[B
}

public final class com/huanshankeji/sequences/SequencesKt {
	public static final fun isSorted (Lkotlin/sequences/Sequence;)Z
	public static final fun isSortedBy (Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Z
	public static final fun isSortedByDescending (Lkotlin/sequences/Sequence;Lkotlin/jvm/functions/Function1;)Z
	public static final fun isSortedDescending (Lkotlin/sequences/Sequence;)Z
	public static final fun isSortedWith (Lkotlin/sequences/Sequence;Ljava/util/Comparator;)Z
}

public final class com/huanshankeji/store/MutableMapStringKeyValueStore : com/huanshankeji/store/StringKeyValueStore {
	public fun <init> ()V
	public fun <init> (Ljava/util/Map;)V
	public synthetic fun <init> (Ljava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun exists (Ljava/lang/String;)Z
	public final fun getMutableMap ()Ljava/util/Map;
	public fun getNonNull (Ljava/lang/String;)Ljava/lang/String;
	public fun getOrNull (Ljava/lang/String;)Ljava/lang/String;
	public fun remove (Ljava/lang/String;)V
	public fun set (Ljava/lang/String;Ljava/lang/String;)V
}

public abstract interface class com/huanshankeji/store/StringKeyValueStore {
	public abstract fun exists (Ljava/lang/String;)Z
	public abstract fun getNonNull (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun getOrNull (Ljava/lang/String;)Ljava/lang/String;
	public abstract fun remove (Ljava/lang/String;)V
	public abstract fun set (Ljava/lang/String;Ljava/lang/String;)V
}

public final class com/huanshankeji/text/StringsKt {
	public static final fun capitalize (Ljava/lang/String;)Ljava/lang/String;
}

